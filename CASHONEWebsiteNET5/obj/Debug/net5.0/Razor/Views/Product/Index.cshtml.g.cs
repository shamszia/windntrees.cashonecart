#pragma checksum "D:\projects\softwares\pos\PointOfSale\CASHONEWebsiteNET5\Views\Product\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8a452d79644d2d0598dc33baea290a926a0ffc37"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Product_Index), @"mvc.1.0.view", @"/Views/Product/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\projects\softwares\pos\PointOfSale\CASHONEWebsiteNET5\Views\_ViewImports.cshtml"
using Application;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\projects\softwares\pos\PointOfSale\CASHONEWebsiteNET5\Views\_ViewImports.cshtml"
using Application.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8a452d79644d2d0598dc33baea290a926a0ffc37", @"/Views/Product/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"03ea476b5db410d4405042b0a5ed991b4e6710c5", @"/Views/_ViewImports.cshtml")]
    public class Views_Product_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Application.Models.TopViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "10", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "20", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "50", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "100", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/javascript"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/model/Product.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "D:\projects\softwares\pos\PointOfSale\CASHONEWebsiteNET5\Views\Product\Index.cshtml"
  
    ViewData["Title"] = "Stock Listing Page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            DefineSection("ColumnContentTitle", async() => {
                WriteLiteral("\r\n    <h1 class=\"my-4\">Store</h1>\r\n");
            }
            );
            WriteLiteral("\r\n");
            DefineSection("Carousel", async() => {
                WriteLiteral("\r\n\r\n");
            }
            );
            WriteLiteral(@"
<div class=""row m-0 pt-2 pb-4"" data-bind=""with: getReferentialView('product-view').getObserverObject()"">
    <div class=""card container p-0"">
        <div class=""card-header table-result-message"">
            <span data-bind=""visible: getProcessing()""><i class=""fa fa-cog fa-spin fa-1x""></i></span>
            <span data-bind=""if: getResultMessage().length > 0""><span data-bind=""text: getResultMessage()""></span></span>
            <span data-bind=""if: $root.getReferentialView('product-view').getObserverObject().DisplayCartLink()""><a class=""pl-1"" href=""/cart/index"" title=""Visit Cart Page"">[Visit Cart Page]</a></span>
            <div data-bind=""if: getErrors().length > 0"">
                <ul class=""errorlist p-0"" data-bind=""foreach: { data: getObservableErrors(), as: 'error' }"">
                    <li><span data-bind=""text: errMessage""></span></li>
                </ul>
            </div>
        </div>
        <div class=""card-body"">
            <div class=""row"">
                <div class='co");
            WriteLiteral(@"l-sm-12 col-md-12 col-lg-12'>
                    <div class='input-group'>
                        <input class='form-control' data-bind='value: Keyword' type='text' placeholder='Keyword' />
                        <span class='input-group-append'>
                            <select data-bind=""options: $root.getReferentialView('product-view').getObserverObject().CategoriesList, optionsText: 'key', optionsValue: 'val', value: $root.getReferentialView('product-view').getObserverObject().Category, optionsCaption: 'select category'"" title=""Select Category""
                                    id=""searchCategory"" class=""form-control col-12""></select>
                        </span>
                        <span class='input-group-append'>
                            <button data-bind='click: function() { search(1); }' class='btn btn-primary' type='button' title='Search'><span>Search</span></button>
                        </span>
                    </div>
                </div>
            </div>
  ");
            WriteLiteral(@"          <div class=""table-responsive"">
                <table class=""table table-hover table-style-simple"">
                    <tr>
                        <th class=""col-sm-12 col-md-2 col-lg-2"">
                            <span title=""Product"">Product</span>
                        </th>
                        <th class=""col-sm-12 col-md-3 col-lg-3"">
                            <span title=""Code & Title"">Code &amp; Title</span>
                        </th>
                        <th class=""col-sm-12 col-md-2 col-lg-2 text-center"">
                            <span title=""Available Quantity"">Quantity</span>
                        </th>
                        <th class=""col-sm-12 col-md-1 col-lg-1 text-right"">
                            <span title=""Price"">Price</span>
                        </th>
                        <th class=""col-sm-12 col-md-2 col-lg-2"">
                            <span title=""Cart Quantity"">Cart Quantity</span>
                        </th>
              ");
            WriteLiteral(@"          <th class=""col-sm-12 col-md-2 col-lg-2""></th>
                    </tr>
                    <tbody data-bind=""foreach: { data: getObservableRecords(), as: 'record' }"">
                        <tr>
                            <td><a href=""#"" data-bind=""attr: { href: '/home/product/' + Code() }""><img class=""img-fluid store-grid-picture"" data-bind=""attr: { src: PicturePath(), title: Code() + ' - ' + Name() }"" /></a></td>
                            <td class=""pt-4"" data-bind=""text: Code() + ' - ' + Name()""></td>
                            <td class=""pt-4 text-center"" data-bind=""text: AvailableQuantity()""></td>
                            <td class=""pt-4 text-right"" data-bind=""text: $root.getReferentialView('product-view').getObserverObject().CurrencySymbol() + ((SalesPrice() === null || SalesPrice() === undefined) ? '0.00' : SalesPrice().toFixed(2)) ""></td>
                            <td><input class=""form-control col-12 text-right"" type=""text"" title=""Enter cart quantity"" data-bind=""value: Ca");
            WriteLiteral(@"rtQuantity"" maxlength=""7"" /></td>
                            <td class=""pr-0"">
                                <div class=""row m-0"">
                                    <div class=""col-sm-12 col-md-12 col-lg-12 m-0 p-1 d-flex justify-content-end"">
                                        <button class=""btn btn-secondary btn-sm"" data-bind=""click: function(data, event) { $parents[0].AddToCart(data); }"">add to cart</button>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
        <div class=""card-footer"">
            <div class=""row"">
                <div class=""col-sm-12 col-md-6 col-lg-6 order-0"">
                    <div class=""input-group d-flex justify-content-start"">
                        <span class=""input-group-prepend"">
                            <span class=""input-group-text table-list-size-label"">Li");
            WriteLiteral("st Size</span>\r\n                        </span>\r\n                        <select class=\"form-control col-2 p-0\" data-bind=\"value: ListSize\" style=\"width:auto;\">\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8a452d79644d2d0598dc33baea290a926a0ffc3711330", async() => {
                WriteLiteral("10");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8a452d79644d2d0598dc33baea290a926a0ffc3712514", async() => {
                WriteLiteral("20");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8a452d79644d2d0598dc33baea290a926a0ffc3713698", async() => {
                WriteLiteral("50");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8a452d79644d2d0598dc33baea290a926a0ffc3714882", async() => {
                WriteLiteral("100");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                        </select>
                    </div>
                </div>
                <div class=""col-sm-12 col-md-6 col-lg-6 order-1"">
                    <div class=""input-group d-flex justify-content-end"" data-bind=""if: getListNavigator().calculateTotalPages() > 1"">
                        <nav class=""d-flex justify-content-end"" aria-label=""Listings"">
                            <ul class=""pagination"">
                                <li class=""page-item disabled"" data-bind=""css: {disabled: CurrentList() == 1}""><a class=""page-link"" href=""#"" data-bind=""click: function() { search(CurrentList() - 1); }"">Previous</a></li>
                                <!-- ko foreach: ListNavigator().getLists() -->
                                <li class=""page-item"">
                                    <a class=""page-link"" href=""#"" data-bind=""click: function() { $parent.search(Number); }""><span data-bind=""text: Number""></span></a>
                                </li>
                           ");
            WriteLiteral(@"     <!-- /ko -->
                                <li class=""page-item"" data-bind=""css: {disabled: CurrentList() == ListNavigator().calculateTotalPages()}""><a class=""page-link"" href=""#"" data-bind=""click: function() { search(CurrentList() + 1); }"">Next</a></li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8a452d79644d2d0598dc33baea290a926a0ffc3717678", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"

    <script type=""text/javascript"">
        var productView = new CRUDView({
            'key': 'product-view',
            'uri': '/product', //service uri address
            'observer': new CRUDObserver({ 'contentType': new Product({}), 'messages': new MessageRepository({ fill: true }) }),
            'fields': [ // related list fields that load related results simply
                {
                    'uri': '/category', // server side CRUDController uri address
                    'target': 'List', // CRUDController function that you want to invoke to get list results
                    'field': 'CategoriesList', // CRUDObserver will be extended with Categories list observable (ko.observableArray)
                    'key': 'Name', // key (display) field bound with dropdown list
                    'value': 'Tag' // value field bound with dropdown list
                }]
        });

        productView.getObserverObject().CurrencySymbol = ko.observable('");
#nullable restore
#line 135 "D:\projects\softwares\pos\PointOfSale\CASHONEWebsiteNET5\Views\Product\Index.cshtml"
                                                                   Write(ViewData["CurrencySymbol"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"');
        productView.getObserverObject().DisplayCartLink = ko.observable(false);

        //extend view with category and skilllevel observables
        productView.getObserverObject().Category = ko.observable("""");

        productView.getObserverObject().search = function (listNumber) {

            productView.list({
                __target: 'GetProductsWithQuantity',
                query: {
                    key: productView.getObserverObject().Category(),
                    keyword: productView.getObserverObject().getKeyword(),
                    page: listNumber,
                    size: productView.getObserverObject().ListSize()
                }
            });
        };

        productView.getObserverObject().AddToCart = function (product) {

            if (product.CartQuantity() <= product.AvailableQuantity()) {

                if (confirm('Are you sure to place product in cart?')) {

                    layoutView.getObserverObject().AddCartItem(new CartItem({");
                WriteLiteral(@"
                        Uid: product.Uid(),
                        OrderId: null,
                        ItemId: product.Uid(),
                        ItemName: product.Name(),
                        ItemCode: product.Code(),
                        AvailableQuantity: product.AvailableQuantity(),
                        Quantity: product.CartQuantity(),
                        Cost: product.SalesPrice(),
                        Discount: product.Discount()
                    }));
                }
            }
            else {

                alert(""Ordered cart quantity is not in stock. Please correct your input or email for larger quantities."");
            }
        };

        productView.getObserverObject().OnCartItem = function (event, eventData) {

            if (eventData !== null && eventData !== undefined) {
                if (eventData.data !== null && eventData.data !== undefined) {

                    if (eventData.data.action !== null && eventData.data.action ");
                WriteLiteral(@"!== undefined) {

                        if (eventData.data.action === 'create') {

                            productView.getObserverObject().setErrors([]);
                            productView.getObserverObject().ResultMessage(""Product placed in cart successfully."");
                            productView.getObserverObject().DisplayCartLink(true);
                        }
                    }
                }
            }
        };

        productView.getObserverObject().OnErrors = function (event, eventData) {
            
            productView.getObserverObject().setErrors(eventData.result);
        };

        productView.ExtendFields();
        layoutView.getReferentialViews().newItem({ 'object': productView });
        layoutView.subscribeEvent('record.before.rendering.view.CRUD.WindnTrees', productView.getObserverObject().OnCartItem);
        layoutView.subscribeEvent('errors.after.rendering.view.CRUD.WindnTrees', productView.getObserverObject().OnErrors);

       ");
                WriteLiteral(@" $(function () {

            try {

                productView.LoadFields();
                productView.getObserverObject().search(1);
            }
            catch (e) {

                console.log(e.message);
            }
        });

    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Application.Models.TopViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
